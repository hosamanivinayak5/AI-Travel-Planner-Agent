# -*- coding: utf-8 -*-
"""TravelAgentPlanner.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1WLS2qwsEQTvf5ut-SllUx9zKxLp9TPUd
"""

from dotenv import load_dotenv
load_dotenv()
import os
apikey = os.getenv("apikey")
# !pip install streamlit langchain-openai

# !pip install -qU langchain  requests streamlit

from langchain_openai import ChatOpenAI
from langchain_core.tools import tool
import requests

@tool
def get_places(city: str,limit=10) -> str:
  """
  This function fetches tourist attractions/places to visit.
  """
  url = f'https://api.opentripmap.com/0.1/en/places/geoname?name={city}&apikey={apikey}'
  res = requests.get(url).json()
  # Handle error response
  if "lat" not in res or "lon" not in res:
        return f"Could not find location for {city}. Response: {res}"
  lat, lon = res["lat"], res["lon"]
  url = f"https://api.opentripmap.com/0.1/en/places/radius?radius=10000&lon={lon}&lat={lat}&rate=3&limit={limit}&apikey={apikey}"
  places = requests.get(url).json()
  return [p["properties"]["name"] for p in places["features"]]

from langchain.agents import AgentExecutor,create_react_agent
from langchain import hub

llm=ChatOpenAI()

prompt = hub.pull("hwchase17/react")

agent=create_react_agent(
    llm=llm,
    tools=[get_places],
    prompt=prompt
)

agentexectuor=AgentExecutor(
    agent=agent,
    tools=[get_places],
    verbose=True
)

# response=agentexectuor.invoke({"input":"Find me top 20 good places to visit near Bangalore"})

# print(response)

# response['output']

# response

import streamlit as st

st.title("✈️ AI Travel Planner")
city = st.text_input("Enter City and number of days")


if st.button("Plan my trip"):
    itinerary = agentexectuor.invoke({"input":city})
    st.write(itinerary['output'])

